
to see the django version: django-admin --version

to create a project: django-admin startproject <your_project_name>

to run the server : python manage.py runserver

check the server is running or not in: http://127.0.0.1:8000/

to create App:
$inside ur proj>python manage.py startapp <your_app_name>

tip:
better to maintain seperaate url file for every app.
> under "your_app">create a urls.py for every app that you create.

every app will have some web pages. when an url is typed, it gives the response which can be webpage or html content
so, every urls.py file should import views.py in it.

so, what ever the urls you want to create for your app, those should be mentioned in the urls.py
copy the same url line that are in <your_project> to <your_app/urls.py>

import 'from django.urls import path' and 'from . import views' in the urls.py that we created in <your_app_name>
This path is helpful as we use r'^url_or_link$' to render specific view.

** dont forget to include the urls.py in <your_app> to urls.py in <your_project> urls.py
    to include that, we need to import "from django.urls import include" in <your_project> urls.py

In <your_app>'s urls.py file, write the view name as mentioned below..
     path('app_name',views.app_name,name='app_name')

    This 'app_name' you mentioned in this 'music/urls.py' file should be defined in <your_app>'s views.py file as mentioned below..
        def app_name(request):
            return HttpResponse("<h1>This is Music App")

to run the server : python manage.py runserver

to do database migrations:
    python manage.py migrate

for creating a table(model),
    go to models.py, create a class(which is a table)

the models we created will be reflected to database only when we mention the details of the app model details in settings.py
    for that, in settings.py, > INSTALLED_APPS> <'music.apps.MusicConfig'> where MusicConfig is from apps.py class

to migrate the models, <$: python manage.py makemigrations music >
    Migrations for 'music':
    music\migrations\0001_initial.py
        - Create model Album
        - Create model Song

to check whether the db is created or not,we can check with,
    $>python manage.py sqlmigrate music 0001
    remember: migration is nothing but updating the changes to db (whether creating the table, updating,deleting,etc..)

    two steps to remember:
        python manage.py makemigrations music
        python manage.py migrate


<-- working with db -->
    python manage.py shell
    from music.models import Album,Song
    Album.objects.all()
    <QuerySet []>

     a = Album(artist="Artist1",album_title="AlbumTitle1",genre="Genre1",album_logo="None")
    >>> a.save()
    >>> a.artist
        'Artist1'
    >>> a.genre
        'Genre1'

    Another way of creating records in db is:
         b = Album()
        >>> b.artist = "Artist2"
        >>> b.album_title = "AlbumTitle2"
        >>> b.genre = "Genre2"
        >>> b.album_logo="Logo2"
        >>> b.save()

    To see all the records created:
        >>> Album.objects.all()
        <QuerySet [<Album: Album object (1)>, <Album: Album object (2)>]>

    To get the value of records clearly, we have to use
        def __str__(self):
            return self.artist + " " + self.genre
            (The above line gives the result in string format)

    now, restart the server and make the migrations by
        $: python manage.py makemigrations
        $: python manage.py migrate
        $: python manage.py runserver

    Now, go to shell,
    from music.models import Album, Song
    Album.objects.filter(id=1)
        <QuerySet [<Album: Artist1 AlbumTitle1 Genre1 None>]>

    To create a superuser/admin:
        $: python manage.py createsuperuser
        create user by giving user name, mail, password

        restart the server and check the url
        http://127.0.0.1:8000/admin/

        login to the application
        we can not see the tables of Album and songs. The reason is we have not registered the models in admin page in music app folder
        To register, the class, go to admin.py in music folder and
            from music.models import Album  # The Class name or model name
            admin.site.register(Album)

            refresh the page and see











